{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Swagger Petstore",
        "description": "A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Swagger API Team",
            "email": "apiteam@swagger.io",
            "url": "http://swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "servers": [
        {
            "url": "http://petstore:4010"
        },
        {
            "url": "https://petstore-secured:4241"
        },
        {
            "url": "http://172.17.0.1:4010"
        },
        {
            "url": "http://host.docker.internal:4010"
        }
    ],
    "paths": {
        "/dump": {
            "get": {
                "summary": "Dump all data in the database",
                "operationId": "Dump",
                "responses": {
                    "200": {
                        "description": "Response containing the version of the api",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DumpData"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/redirect": {
            "get": {
                "tags": [
                    "Redirect"
                ],
                "security": [],
                "x-42c-no-authentication": true,
                "summary": "Redirection",
                "operationId": "Redirect",
                "responses": {
                    "302": {
                        "$ref": "#/components/responses/302"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/version": {
            "get": {
                "tags": [
                    "Version"
                ],
                "security": [],
                "x-42c-no-authentication": true,
                "summary": "Give the version of the api",
                "operationId": "Version",
                "responses": {
                    "200": {
                        "description": "Response containing the version of the api",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Version"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "security": [],
                "x-42c-no-authentication": true,
                "summary": "Login an user",
                "operationId": "UserLogin",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginData"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Session"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/login/urlencoded": {
            "post": {
                "tags": [
                    "Users"
                ],
                "security": [],
                "x-42c-no-authentication": true,
                "summary": "Login an user",
                "operationId": "UserLoginUrlencoded",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginData"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Session"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/users": {
            "post": {
                "security": [
                    {
                        "Cookie": []
                    },
                    {
                        "ApiKey": []
                    }
                ],
                "tags": [
                    "Users",
                    "AdminOnly"
                ],
                "summary": "Create an user",
                "operationId": "CreateUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/users/{username}": {
            "delete": {
                "tags": [
                    "Users",
                    "AdminOnly"
                ],
                "security": [
                    {
                        "Cookie": []
                    },
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "Delete an user",
                "operationId": "DeleteUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathUsername"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/apikey": {
            "post": {
                "tags": [
                    "Authentication",
                    "AdminOnly"
                ],
                "security": [
                    {
                        "Cookie": []
                    },
                    {
                        "ApiKey": []
                    }
                ],
                "summary": "Create an apikey",
                "operationId": "CreateApikey",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Apikey"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/apikey/{id}": {
            "delete": {
                "tags": [
                    "Authentication",
                    "CookieOnly"
                ],
                "security": [
                    {
                        "Cookie": []
                    }
                ],
                "summary": "Delete an apikey",
                "operationId": "DeleteApikey",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the apikey to delete",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/petstores": {
            "get": {
                "tags": [
                    "Petstore"
                ],
                "security": [],
                "x-42c-no-authentication": true,
                "description": "Returns all petstores from the system that the user has access to",
                "operationId": "FindPetstores",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name to filter by",
                        "required": false,
                        "style": "form",
                        "schema": {
                            "$ref": "#/components/schemas/PetstoreName"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "maximum number of results to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0,
                            "maximum": 100,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "petstore response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Petstores"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "post": {
                "tags": [
                    "Petstore"
                ],
                "security": [
                    {
                        "Cookie": []
                    },
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Creates a new petstore",
                "operationId": "CreatePetstore",
                "requestBody": {
                    "description": "Pestore to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewPetstore"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "pet response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Petstore"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/petstores/{id}": {
            "get": {
                "tags": [
                    "Petstore"
                ],
                "security": [],
                "x-42c-no-authentication": true,
                "description": "Returns a petstore based on its id",
                "operationId": "ReadPetstore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of petstore to fetch",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "petstore response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Petstore"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Petstore",
                    "AdminOnly"
                ],
                "security": [
                    {
                        "Cookie": []
                    },
                    {
                        "ApiKey": []
                    }
                ],
                "description": "deletes a single petstore based on the ID supplied",
                "operationId": "DeletePetstore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of petstore to delete",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/petstores/{id}/pets": {
            "get": {
                "tags": [
                    "Pet"
                ],
                "security": [
                    {
                        "Cookie": []
                    },
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Return all pets in the petstore",
                "operationId": "ListPets",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "petstore id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pets"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/pets": {
            "post": {
                "tags": [
                    "Pet"
                ],
                "security": [
                    {
                        "Cookie": []
                    },
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Creates a new pet in the store. Duplicates names are not allowed",
                "operationId": "CreatePet",
                "requestBody": {
                    "description": "Pet to add to the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewPet"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "pet response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/pets/{id}": {
            "get": {
                "tags": [
                    "Pet"
                ],
                "security": [
                    {
                        "Cookie": []
                    },
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Returns a user based on a single ID, if the user does not have access to the pet",
                "operationId": "ReadPet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of pet to fetch",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Pet"
                ],
                "security": [
                    {
                        "Cookie": []
                    },
                    {
                        "ApiKey": []
                    }
                ],
                "description": "deletes a single pet based on the ID supplied",
                "operationId": "DeletePet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of pet to delete",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "pet deleted"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/pets/{id}/transfer": {
            "put": {
                "tags": [
                    "Pet"
                ],
                "security": [
                    {
                        "Cookie": []
                    },
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Transfer a pet from a petstore to another one, the user must be the owner of the pet",
                "operationId": "TransferPet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PathId"
                    }
                ],
                "requestBody": {
                    "description": "Petstore to transfer",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "petstoreId"
                                ],
                                "properties": {
                                    "petstoreId": {
                                        "$ref": "#/components/schemas/Id"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "pet response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        }
    },
    "components": {
        "parameters": {
            "PathId": {
                "name": "id",
                "in": "path",
                "description": "ID of pet to fetch",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/Id"
                }
            },
            "PathUsername": {
                "name": "username",
                "in": "path",
                "description": "Username of the user to delete",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/Username"
                }
            }
        },
        "securitySchemes": {
            "ApiKey": {
                "type": "apiKey",
                "name": "apikey",
                "in": "header"
            },
            "Cookie": {
                "type": "apiKey",
                "name": "session",
                "in": "cookie"
            }
        },
        "responses": {
            "204": {
                "description": "no content"
            },
            "302": {
                "description": "redirect",
                "headers": {
                    "location": {
                        "description": "URL Header to redirect",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "400": {
                "description": "bad input",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "application/problem+json": {
                        "schema": {
                            "$ref": "#/components/schemas/FwError"
                        }
                    }
                }
            },
            "401": {
                "description": "unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    },
                    "application/problem+json": {
                        "schema": {
                            "$ref": "#/components/schemas/FwError"
                        }
                    }
                }
            },
            "default": {
                "description": "unexpected error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    },
                    "application/problem+json": {
                        "schema": {
                            "$ref": "#/components/schemas/FwError"
                        }
                    }
                }
            }
        },
        "schemas": {
            "DumpData": {
                "type": "object",
                "properties": {
                    "petstores": {
                        "$ref": "#/components/schemas/Petstores"
                    },
                    "pets": {
                        "$ref": "#/components/schemas/Pets"
                    },
                    "users": {
                        "$ref": "#/components/schemas/Users"
                    },
                    "apikeys": {
                        "$ref": "#/components/schemas/Apikeys"
                    },
                    "sessions": {
                        "$ref": "#/components/schemas/Sessions"
                    }
                }
            },
            "LoginData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "user",
                    "password"
                ],
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/Username"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 1,
                        "maxLength": 100,
                        "example":"azertyuiop"
                    }
                }
            },
            "User": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "user",
                    "password",
                    "isAdmin"
                ],
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/Username"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 1,
                        "maxLength": 100,
                        "example":"azertyuiop"
                    },
                    "isAdmin": {
                        "default": false,
                        "type": "boolean"
                    }
                }
            },
            "Apikey": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/Id"
                    }
                }
            },
            "Session": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/Id"
                    }
                }
            },
            "Sessions": {
                "type": "object",
                "required": [
                    "items"
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Session"
                        },
                        "minLength": 0,
                        "maxLength": 100
                    }
                }
            },
            "Users": {
                "type": "object",
                "required": [
                    "items"
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        },
                        "minLength": 0,
                        "maxLength": 100
                    }
                }
            },
            "Apikeys": {
                "type": "object",
                "required": [
                    "items"
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Apikey"
                        },
                        "minLength": 0,
                        "maxLength": 100
                    }
                }
            },
            "Petstores": {
                "type": "object",
                "required": [
                    "items"
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Petstore"
                        },
                        "minLength": 0,
                        "maxLength": 100
                    }
                }
            },
            "Pets": {
                "type": "object",
                "required": [
                    "items"
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Pet"
                        },
                        "minLength": 0,
                        "maxLength": 100
                    }
                }
            },
            "Username": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "pattern": "^[\\w\\-+.]+@((\\w\\-?)+\\.){1,4}[a-zA-Z0-9]{1,100}$",
                "example": "helloWorld@company.io"
            },
            "PetstoreName": {
                "type": "string",
                "pattern": "^[a-zA-Z]{5,10}$",
                "minLength": 5,
                "maxLength": 10,
                "example": "Petstore"
            },
            "PetName": {
                "type": "string",
                "pattern": "^[a-zA-Z]{5,10}$",
                "minLength": 5,
                "maxLength": 10,
                "example": "Billy"
            },
            "Id": {
                "type": "string",
                "format": "string",
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "maxLength": 36,
                "minLength": 36,
                "example": "7fd1b0b3-d0fc-4986-abe8-e92742d42644"
            },
            "Petstore": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/NewPetstore"
                    },
                    {
                        "type": "object",
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "$ref": "#/components/schemas/Id"
                            }
                        }
                    }
                ]
            },
            "NewPetstore": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/PetstoreName"
                    }
                }
            },
            "Pet": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/NewPet"
                    },
                    {
                        "type": "object",
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "$ref": "#/components/schemas/Id"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": [
                            "owner"
                        ],
                        "properties": {
                            "owner": {
                                "$ref": "#/components/schemas/Username"
                            }
                        }
                    }
                ]
            },
            "NewPet": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "petstoreId": {
                        "$ref": "#/components/schemas/Id"
                    },
                    "name": {
                        "$ref": "#/components/schemas/PetName"
                    },
                    "age": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 100,
                        "example": 10
                    }
                }
            },
            "Version": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "version",
                    "commitId"
                ],
                "properties": {
                    "version": {
                        "type": "string",
                        "example":"v1.0.0"
                    },
                    "commitId": {
                        "type": "string",
                        "example":"3271bd2a72002b6a730d6da541c5da355390c4ff"
                    }
                }
            },
            "Error": {
                "type": "object",
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 500,
                        "example": 10
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "FwError": {
                "type": "object",
                "required": [
                    "status",
                    "title",
                    "detail",
                    "uuid"
                ],
                "properties": {
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 504,
                        "example": 10
                    },
                    "title": {
                        "type": "string"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "uuid": {
                        "format": "uuid",
                        "type": "string",
                        "example": "a83a29f5-0d63-46f2-8f2e-44c2f1d2e07e",
                        "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$",
                        "minLength": 36,
                        "maxLength": 36,
                        "x-42c-format": "o:uuid"
                    }
                }
            }
        }
    }
}
