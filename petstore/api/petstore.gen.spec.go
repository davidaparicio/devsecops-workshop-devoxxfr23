// Package main provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package main

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"DxXj4n8BAAD//8OVfabnOQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
