// Package main provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.10.1 DO NOT EDIT.
package main

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
